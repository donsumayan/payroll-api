{"version":3,"sources":["webpack://common-utils-pkg/webpack/universalModuleDefinition","webpack://common-utils-pkg/webpack/bootstrap","webpack://common-utils-pkg/./node_modules/lz-string/libs/lz-string.js","webpack://common-utils-pkg/./src/arrayToString/arrayToString.js","webpack://common-utils-pkg/./src/browserDetect/browserDetect.js","webpack://common-utils-pkg/./src/colorBrightness/colorBrightness.js","webpack://common-utils-pkg/./src/doTypesMatch/doTypesMatch.js","webpack://common-utils-pkg/./src/doTypesMatch/doTypesMatchFn.js","webpack://common-utils-pkg/./src/expects/expects.js","webpack://common-utils-pkg/./src/guid/guid.js","webpack://common-utils-pkg/./src/index.js","webpack://common-utils-pkg/./src/invertColor/invertColor.js","webpack://common-utils-pkg/./src/randomPastelColor/randomPastelColor.js","webpack://common-utils-pkg/./src/readableBytes/readableBytes.js","webpack://common-utils-pkg/./src/slugify/slugify.js","webpack://common-utils-pkg/./src/storageClear/storageClear.js","webpack://common-utils-pkg/./src/storageGet/storageGet.js","webpack://common-utils-pkg/./src/storageRemove/storageRemove.js","webpack://common-utils-pkg/./src/storageSet/storageSet.js","webpack://common-utils-pkg/./src/stringToArray/stringToArray.js","webpack://common-utils-pkg/./src/toBoolean/toBoolean.js","webpack://common-utils-pkg/./src/toSentenceCase/toSentenceCase.js","webpack://common-utils-pkg/./src/toTitleCase/toTitleCase.js"],"names":["arrayToString","array","delimiter","join","expects","browserDetect","browserName","userAgent","window","navigator","InstallTrigger","document","documentMode","chrome","match","colorBrightness","hex","amount","col","slice","num","parseInt","r","b","g","toString","padStart","toUpperCase","doTypesMatch","arg","expectedType","flag","argType","constructor","Object","Array","isArray","errorMsg","getType","val","type","generateErrorMessage","caller","expectType","idx","receivedType","areExpectedTypes","args","fnName","reqArgs","optArgs","theyMatch","allArgs","keys","forEach","prototype","hasOwnProperty","call","someFunction","wrappedFunction","arguments","Error","guid","s4","Math","floor","random","substring","padZero","str","len","newLen","zeros","invertColor","newHex","indexOf","length","randomPastelColor","pastel","isWholeNum","number","readableBytes","bytes","decimals","units","log","converted","unit","formatted","toFixed","slugify","string","a","p","RegExp","split","toLowerCase","replace","c","charAt","storageClear","localStorage","clear","storageGet","key","value","LZString","decompress","getItem","JSON","parse","e","console","error","storageRemove","removeItem","storageSet","data","setItem","compress","stringify","stringToArray","predefinedTrueValues","toBoolean","trueValuesArr","valToTest","includes","toSentenceCase","returnStr","toTitleCase","txt","substr"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uDAAuD,+BAA+B;AACtF,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,mEAAmE,wDAAwD,EAAE;AAC7H,GAAG;;AAEH;AACA;AACA,qDAAqD,gBAAgB;AACrE,GAAG;;AAEH;AACA;AACA;AACA,2EAA2E,0CAA0C,EAAE;AACvH,GAAG;;AAEH;AACA;AACA;AACA,gDAAgD;;AAEhD,6CAA6C,YAAY;AACzD;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,KAAK;AACL,+CAA+C;AAC/C,0CAA0C,YAAY;AACtD;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA,GAAG;;;AAGH;AACA;AACA;AACA,oDAAoD,gCAAgC;AACpF,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,mEAAmE,yDAAyD,EAAE;AAC9H,GAAG;;AAEH;AACA,4DAA4D,aAAa;AACzE,GAAG;AACH;AACA;AACA;AACA,8BAA8B;AAC9B,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,0BAA0B;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,sBAAsB,oBAAoB;AAC1C;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,sBAAsB,oBAAoB;AAC1C;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,sBAAsB,OAAO;AAC7B;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,oBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,oBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;;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","file":"common-utils-pkg.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"common-utils-pkg\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"common-utils-pkg\"] = factory();\n\telse\n\t\troot[\"common-utils-pkg\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\n// This work is free. You can redistribute it and/or modify it\n// under the terms of the WTFPL, Version 2\n// For more information see LICENSE.txt or http://www.wtfpl.net/\n//\n// For more information, the home page:\n// http://pieroxy.net/blog/pages/lz-string/testing.html\n//\n// LZ-based compression algorithm, version 1.4.4\nvar LZString = (function() {\n\n// private property\nvar f = String.fromCharCode;\nvar keyStrBase64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nvar keyStrUriSafe = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$\";\nvar baseReverseDic = {};\n\nfunction getBaseValue(alphabet, character) {\n  if (!baseReverseDic[alphabet]) {\n    baseReverseDic[alphabet] = {};\n    for (var i=0 ; i<alphabet.length ; i++) {\n      baseReverseDic[alphabet][alphabet.charAt(i)] = i;\n    }\n  }\n  return baseReverseDic[alphabet][character];\n}\n\nvar LZString = {\n  compressToBase64 : function (input) {\n    if (input == null) return \"\";\n    var res = LZString._compress(input, 6, function(a){return keyStrBase64.charAt(a);});\n    switch (res.length % 4) { // To produce valid Base64\n    default: // When could this happen ?\n    case 0 : return res;\n    case 1 : return res+\"===\";\n    case 2 : return res+\"==\";\n    case 3 : return res+\"=\";\n    }\n  },\n\n  decompressFromBase64 : function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrBase64, input.charAt(index)); });\n  },\n\n  compressToUTF16 : function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 15, function(a){return f(a+32);}) + \" \";\n  },\n\n  decompressFromUTF16: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 16384, function(index) { return compressed.charCodeAt(index) - 32; });\n  },\n\n  //compress into uint8array (UCS-2 big endian format)\n  compressToUint8Array: function (uncompressed) {\n    var compressed = LZString.compress(uncompressed);\n    var buf=new Uint8Array(compressed.length*2); // 2 bytes per character\n\n    for (var i=0, TotalLen=compressed.length; i<TotalLen; i++) {\n      var current_value = compressed.charCodeAt(i);\n      buf[i*2] = current_value >>> 8;\n      buf[i*2+1] = current_value % 256;\n    }\n    return buf;\n  },\n\n  //decompress from uint8array (UCS-2 big endian format)\n  decompressFromUint8Array:function (compressed) {\n    if (compressed===null || compressed===undefined){\n        return LZString.decompress(compressed);\n    } else {\n        var buf=new Array(compressed.length/2); // 2 bytes per character\n        for (var i=0, TotalLen=buf.length; i<TotalLen; i++) {\n          buf[i]=compressed[i*2]*256+compressed[i*2+1];\n        }\n\n        var result = [];\n        buf.forEach(function (c) {\n          result.push(f(c));\n        });\n        return LZString.decompress(result.join(''));\n\n    }\n\n  },\n\n\n  //compress into a string that is already URI encoded\n  compressToEncodedURIComponent: function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 6, function(a){return keyStrUriSafe.charAt(a);});\n  },\n\n  //decompress from an output of compressToEncodedURIComponent\n  decompressFromEncodedURIComponent:function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    input = input.replace(/ /g, \"+\");\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrUriSafe, input.charAt(index)); });\n  },\n\n  compress: function (uncompressed) {\n    return LZString._compress(uncompressed, 16, function(a){return f(a);});\n  },\n  _compress: function (uncompressed, bitsPerChar, getCharFromInt) {\n    if (uncompressed == null) return \"\";\n    var i, value,\n        context_dictionary= {},\n        context_dictionaryToCreate= {},\n        context_c=\"\",\n        context_wc=\"\",\n        context_w=\"\",\n        context_enlargeIn= 2, // Compensate for the first entry which should not count\n        context_dictSize= 3,\n        context_numBits= 2,\n        context_data=[],\n        context_data_val=0,\n        context_data_position=0,\n        ii;\n\n    for (ii = 0; ii < uncompressed.length; ii += 1) {\n      context_c = uncompressed.charAt(ii);\n      if (!Object.prototype.hasOwnProperty.call(context_dictionary,context_c)) {\n        context_dictionary[context_c] = context_dictSize++;\n        context_dictionaryToCreate[context_c] = true;\n      }\n\n      context_wc = context_w + context_c;\n      if (Object.prototype.hasOwnProperty.call(context_dictionary,context_wc)) {\n        context_w = context_wc;\n      } else {\n        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n          if (context_w.charCodeAt(0)<256) {\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<8 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          } else {\n            value = 1;\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1) | value;\n              if (context_data_position ==bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = 0;\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<16 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          }\n          context_enlargeIn--;\n          if (context_enlargeIn == 0) {\n            context_enlargeIn = Math.pow(2, context_numBits);\n            context_numBits++;\n          }\n          delete context_dictionaryToCreate[context_w];\n        } else {\n          value = context_dictionary[context_w];\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n\n\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        // Add wc to the dictionary.\n        context_dictionary[context_wc] = context_dictSize++;\n        context_w = String(context_c);\n      }\n    }\n\n    // Output the code for w.\n    if (context_w !== \"\") {\n      if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n        if (context_w.charCodeAt(0)<256) {\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<8 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        } else {\n          value = 1;\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | value;\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = 0;\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<16 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        delete context_dictionaryToCreate[context_w];\n      } else {\n        value = context_dictionary[context_w];\n        for (i=0 ; i<context_numBits ; i++) {\n          context_data_val = (context_data_val << 1) | (value&1);\n          if (context_data_position == bitsPerChar-1) {\n            context_data_position = 0;\n            context_data.push(getCharFromInt(context_data_val));\n            context_data_val = 0;\n          } else {\n            context_data_position++;\n          }\n          value = value >> 1;\n        }\n\n\n      }\n      context_enlargeIn--;\n      if (context_enlargeIn == 0) {\n        context_enlargeIn = Math.pow(2, context_numBits);\n        context_numBits++;\n      }\n    }\n\n    // Mark the end of the stream\n    value = 2;\n    for (i=0 ; i<context_numBits ; i++) {\n      context_data_val = (context_data_val << 1) | (value&1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data_position = 0;\n        context_data.push(getCharFromInt(context_data_val));\n        context_data_val = 0;\n      } else {\n        context_data_position++;\n      }\n      value = value >> 1;\n    }\n\n    // Flush the last char\n    while (true) {\n      context_data_val = (context_data_val << 1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data.push(getCharFromInt(context_data_val));\n        break;\n      }\n      else context_data_position++;\n    }\n    return context_data.join('');\n  },\n\n  decompress: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 32768, function(index) { return compressed.charCodeAt(index); });\n  },\n\n  _decompress: function (length, resetValue, getNextValue) {\n    var dictionary = [],\n        next,\n        enlargeIn = 4,\n        dictSize = 4,\n        numBits = 3,\n        entry = \"\",\n        result = [],\n        i,\n        w,\n        bits, resb, maxpower, power,\n        c,\n        data = {val:getNextValue(0), position:resetValue, index:1};\n\n    for (i = 0; i < 3; i += 1) {\n      dictionary[i] = i;\n    }\n\n    bits = 0;\n    maxpower = Math.pow(2,2);\n    power=1;\n    while (power!=maxpower) {\n      resb = data.val & data.position;\n      data.position >>= 1;\n      if (data.position == 0) {\n        data.position = resetValue;\n        data.val = getNextValue(data.index++);\n      }\n      bits |= (resb>0 ? 1 : 0) * power;\n      power <<= 1;\n    }\n\n    switch (next = bits) {\n      case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 2:\n        return \"\";\n    }\n    dictionary[3] = c;\n    w = c;\n    result.push(c);\n    while (true) {\n      if (data.index > length) {\n        return \"\";\n      }\n\n      bits = 0;\n      maxpower = Math.pow(2,numBits);\n      power=1;\n      while (power!=maxpower) {\n        resb = data.val & data.position;\n        data.position >>= 1;\n        if (data.position == 0) {\n          data.position = resetValue;\n          data.val = getNextValue(data.index++);\n        }\n        bits |= (resb>0 ? 1 : 0) * power;\n        power <<= 1;\n      }\n\n      switch (c = bits) {\n        case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 2:\n          return result.join('');\n      }\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n      if (dictionary[c]) {\n        entry = dictionary[c];\n      } else {\n        if (c === dictSize) {\n          entry = w + w.charAt(0);\n        } else {\n          return null;\n        }\n      }\n      result.push(entry);\n\n      // Add w+entry[0] to the dictionary.\n      dictionary[dictSize++] = w + entry.charAt(0);\n      enlargeIn--;\n\n      w = entry;\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n    }\n  }\n};\n  return LZString;\n})();\n\nif (typeof define === 'function' && define.amd) {\n  define(function () { return LZString; });\n} else if( typeof module !== 'undefined' && module != null ) {\n  module.exports = LZString\n}\n","import expects from '../expects/expects';\n\n/**\n * Convert an array to a string and combine on the delimiter passed.\n *\n * @module String\n * @name arrayToString\n * @param {AnyArray} array array to convert to string\n * @param {String} delimiter characater to use in  combining to string\n * @returns {String} Returns a string from the array.\n * @example\n *\n * arrayToString(['The', 'quick', 'brown'], '-');\n * // => 'The-brown-fox'\n */\nconst arrayToString = (array, delimiter) => array.join(delimiter);\n\nexport default expects(\n  arrayToString,\n  'arrayToString',\n  {\n    0: 'array',\n    1: 'string'\n  }\n);\n","/**\n * Detects browser being used.\n *\n * @module Browser\n * @name browserDetect\n * @returns {String} Returns browser name\n * @example\n *\n * browserDetect();\n * // => 'Chrome\n */\nconst browserDetect = () => {\n  let browserName = '';\n  const { userAgent } = window.navigator;\n\n  // Firefox\n  // 66.0.5 (64-bit)\n  if (typeof InstallTrigger === 'undefined') {\n    browserName = 'Firefox';\n  }\n\n  // IE\n  // 11.437.17763.0\n  if (/* @cc_on!@ */ false || !!document.documentMode) {\n    browserName = 'IE';\n  }\n\n  // Edge\n  // 44.17763.1.0\n  if (!!window.chrome && userAgent.match(/Edge/)) {\n    browserName = 'Edge';\n  }\n\n  // Opera\n  // 60.0.3255.95\n  if (!!window.chrome && userAgent.match(/OPR/)) {\n    browserName = 'Opera';\n  }\n\n  // Chrome\n  // 74.0.3729.157 (Official Build) (64-bit)\n  if (!!window.chrome && !userAgent.match(/(OPR|Edge)/)) {\n    browserName = 'Chrome';\n  }\n\n\n  return browserName;\n};\n\nexport default browserDetect;\n","import expects from '../expects/expects';\n\n// https://css-tricks.com/snippets/javascript/lighten-darken-color/\n/* eslint-disable no-bitwise, eqeqeq */\n\n/**\n * Brightens or darkens a HEX color based on the amount specified. Behaves like the SASS lighen and darken.\n * Will always return with # symbol.\n *\n * @module Color\n * @name colorBrightness\n * @param {String} hex HEX color to change brightness\n * @param {Number} amount positive or negative percentage\n * @returns {String} Returns a manipulated HEX color\n * @example\n *\n * colorBrightness('#3CB878', 50);\n * // => '#6EEAAA'\n *\n * colorBrightness('#3CB878', -50);\n * // => '#A8646'\n */\nconst colorBrightness = (hex, amount) => {\n  let col = hex;\n\n  if (col[0] == '#') {\n    col = col.slice(1);\n  }\n\n  const num = parseInt(col, 16);\n\n  let r = (num >> 16) + amount;\n\n  if (r > 255) r = 255;\n  else if (r < 0) r = 0;\n\n  let b = ((num >> 8) & 0x00FF) + amount;\n\n  if (b > 255) b = 255;\n  else if (b < 0) b = 0;\n\n  let g = (num & 0x0000FF) + amount;\n\n  if (g > 255) g = 255;\n  else if (g < 0) g = 0;\n\n  // pad 0's to the left to make it a valid 6 character hex\n  // issue pointed out in the comments under the source code\n  return (`#${(g | (b << 8) | (r << 16)).toString(16).padStart(6, 0)}`).toUpperCase();\n};\n\nexport default expects(\n  colorBrightness,\n  'colorBrightness',\n  {\n    0: 'string',\n    1: 'number'\n  }\n);\n","// bypass dependency cycle\n// doTypesMatch requires expects\n// expects requires doTypesMatch\nimport doTypesMatch from './doTypesMatchFn';\nimport expects from '../expects/expects';\n\nexport default expects(\n  doTypesMatch,\n  'doTypesMatch',\n  {\n    0: 'any',\n    1: 'string'\n  }\n);\n","// To Do: Accept an array of arguments\n// Compare against an array of expected types\n\n/**\n * Checks if the type of the value is the expected type.\n *\n * @module Core\n * @name doTypesMatch\n * @param {*} arg - any value to check\n * @param {String} expectedType - the type to check the value against\n * @returns {Boolean} Returns a boolean if the type of the value matches to expectedType.\n * @example\n *\n * doTypesMatch(1, 'number');\n * // => true\n *\n * doTypesMatch('abc', 'number');\n * // => false\n */\nconst doTypesMatch = (arg, expectedType) => {\n  let flag = false;\n  const argType = typeof arg;\n  switch (expectedType) {\n    case 'string':\n    case 'number':\n    case 'boolean':\n    case 'function':\n    case 'undefined':\n      flag = argType === expectedType;\n      break;\n    case 'object':\n      flag = arg.constructor === Object;\n      break;\n    case 'array':\n      flag = Array.isArray(arg);\n      break;\n    case 'null':\n      flag = arg === null;\n      break;\n  }\n  return flag;\n};\n\nexport default doTypesMatch;\n","import doTypesMatch from '../doTypesMatch/doTypesMatchFn';\n\nlet errorMsg = '';\n\nconst getType = (val) => {\n  let type = typeof val;\n  if (val && Array.isArray(val)) {\n    type = 'array';\n  }\n  if (val && val.constructor === Object) {\n    type = 'object';\n  }\n  if (val === null) {\n    type = 'null';\n  }\n  return type;\n};\n\nconst generateErrorMessage = (type, caller, expectType, idx, receivedType) => `Method [${caller}] `\n  + `expects [${expectType}] type on ${type} parameter [${+idx + 1}] `\n  + `but received [${receivedType}]`;\n\nconst areExpectedTypes = (args, fnName, reqArgs, optArgs) => {\n  let theyMatch = true;\n  const allArgs = { ...reqArgs, ...optArgs };\n  Object.keys(allArgs).forEach((val) => {\n    const receivedType = getType(args[val]);\n    // only return first occurence of error\n    // start from required\n    if (typeof args[val] === 'undefined' && Object.prototype.hasOwnProperty.call(optArgs, val)) {\n      // do nothing\n      // if undefined but arg is optional\n    } else if (reqArgs[val] === 'any') {\n      // do nothing\n      // accepts any type\n    } else if (theyMatch\n      && (Object.prototype.hasOwnProperty.call(reqArgs, val)\n      && !doTypesMatch(args[val], reqArgs[val]))) {\n      // checking for required args\n      errorMsg = generateErrorMessage('required', fnName, reqArgs[val], val, receivedType);\n      theyMatch = false;\n    } else if (theyMatch\n      && (Object.prototype.hasOwnProperty.call(optArgs, val)\n      && !doTypesMatch(args[val], optArgs[val]))) {\n      // if arg has value and it is an optional arg\n      errorMsg = generateErrorMessage('optional', fnName, optArgs[val], val, receivedType);\n      theyMatch = false;\n    }\n  });\n\n  return theyMatch;\n};\n\n/**\n *\n * @ignore\n * @param {Function} someFunction function to wrap\n * @param {String} fnName name of method\n * @param {Object} reqArgs object of required types\n * @param {Object} [optArgs=null] object of expected types\n */\nconst expects = (someFunction, fnName, reqArgs, optArgs = {}) => {\n  // eslint-disable-next-line func-names\n  const wrappedFunction = function () {\n    // eslint-disable-next-line prefer-rest-params\n    if (!areExpectedTypes(arguments, fnName, reqArgs, optArgs)) {\n      throw new Error(errorMsg);\n    } else {\n      // return the function if the types match\n      // eslint-disable-next-line prefer-rest-params\n      return someFunction(...arguments);\n    }\n  };\n  return wrappedFunction;\n};\n\nexport default expects;\n","/**\n * Generates a GUID.\n *\n * @module Key\n * @name guid\n * @returns {String} guid string\n * @example\n *\n * guid();\n * // => \"0153a717-3ba2-b1ac-67f1-49db6551a28d\"\n */\nconst guid = () => {\n  const s4 = () => Math.floor((1 + Math.random()) * 0x10000)\n    .toString(16)\n    .substring(1);\n  return `${s4() + s4()}-${s4()}-${s4()}-${s4()}-${s4()}${s4()}${s4()}`;\n};\n\nexport default guid;\n","export { default as arrayToString } from './arrayToString/arrayToString';\nexport { default as browserDetect } from './browserDetect/browserDetect';\nexport { default as colorBrightness } from './colorBrightness/colorBrightness';\nexport { default as doTypesMatch } from './doTypesMatch/doTypesMatch';\nexport { default as guid } from './guid/guid';\nexport { default as invertColor } from './invertColor/invertColor';\nexport { default as randomPastelColor } from './randomPastelColor/randomPastelColor';\nexport { default as readableBytes } from './readableBytes/readableBytes';\nexport { default as slugify } from './slugify/slugify';\nexport { default as storageClear } from './storageClear/storageClear';\nexport { default as storageGet } from './storageGet/storageGet';\nexport { default as storageRemove } from './storageRemove/storageRemove';\nexport { default as storageSet } from './storageSet/storageSet';\nexport { default as stringToArray } from './stringToArray/stringToArray';\nexport { default as toBoolean } from './toBoolean/toBoolean';\nexport { default as toSentenceCase } from './toSentenceCase/toSentenceCase';\nexport { default as toTitleCase } from './toTitleCase/toTitleCase';\n","import expects from '../expects/expects';\n\n// https://stackoverflow.com/a/35970186/4110257\n\nconst padZero = (str, len) => {\n  let newLen = len;\n  newLen = newLen || 2;\n  const zeros = new Array(newLen).join('0');\n  return (zeros + str).slice(-newLen);\n};\n\n/**\n * Inverts a HEX color.\n *\n * @module Color\n * @name invertColor\n * @param {String} hex hex color to convert\n * @returns {String} Returns a HEX color string.\n * @example\n *\n * invertColor('#E3CCA8');\n * // => '#1C3357'\n *\n * invertColor('ccc');\n * // => '#333333'\n */\nconst invertColor = (hex) => {\n  let newHex = hex;\n  if (newHex.indexOf('#') === 0) {\n    newHex = newHex.slice(1);\n  }\n  // convert 3-digit hex to 6-digits.\n  if (newHex.length === 3) {\n    newHex = newHex[0] + newHex[0] + newHex[1] + newHex[1] + newHex[2] + newHex[2];\n  }\n  if (newHex.length !== 6) {\n    throw new Error('Invalid HEX color.');\n  }\n  // invert color components\n  const r = (255 - parseInt(newHex.slice(0, 2), 16)).toString(16);\n  const g = (255 - parseInt(newHex.slice(2, 4), 16)).toString(16);\n  const b = (255 - parseInt(newHex.slice(4, 6), 16)).toString(16);\n  // pad each with zeros and return\n  return `#${padZero(r)}${padZero(g)}${padZero(b)}`.toUpperCase();\n};\n\nexport default expects(\n  invertColor,\n  'invertColor',\n  {\n    0: 'string'\n  }\n);\n","/**\n * Get a random pastel color.\n *\n * @module Color\n * @name randomPastelColor\n * @returns {String} Returns an HSL color.\n * @example\n *\n * randomPastelColor();\n * // => 'hsl(85.78009756824814,31.861668997564585%,90.94781190317771%)'\n */\nconst randomPastelColor = () => {\n  const pastel = `hsl(${360 * Math.random()},${\n    25 + 70 * Math.random()}%,${\n    85 + 10 * Math.random()}%)`;\n  return pastel;\n};\n\nexport default randomPastelColor;\n","import expects from '../expects/expects';\n\nconst isWholeNum = number => number % 1 === 0;\n\n/**\n * Converts a number of bytes to a human readable file size.\n *\n * @module File\n * @name readableBytes\n * @param {Number} bytes number of bytes to show\n * @param {Number} [decimals] optional number of decimals to show\n * @returns {String} Returns a human readable file size.\n * @example\n *\n * readableBytes(1234);\n * // => 1.205078125 kB\n *\n * readableBytes(1234, 2);\n * // => 1.21 kB\n */\nconst readableBytes = (bytes, decimals = null) => {\n  const units = ['byte(s)', 'kB', 'MB', 'GB', 'TB', 'PB'];\n  const number = Math.floor(Math.log(bytes) / Math.log(1024));\n  const converted = bytes / (1024 ** Math.floor(number));\n  const unit = units[number];\n  const formatted = isWholeNum(converted) || !decimals ? converted : converted.toFixed(decimals);\n  return `${formatted} ${unit}`;\n};\n\nexport default expects(\n  readableBytes,\n  'readableBytes',\n  {\n    0: 'number'\n  },\n  {\n    1: 'number'\n  }\n);\n","import expects from '../expects/expects';\n\n/**\n * Converts a string into a slug for URL usage.\n *\n * @module Slug\n * @name slugify\n * @param {String} string string to convert to slug\n * @returns {String} Returns slug version of the string.\n * @example\n *\n * slugify('The quick brown fox');\n * // => 'the-quick-brown-fox'\n *\n * slugify('A. more-Complicated string!..');\n * // => 'a-more-complicated-string'\n *\n * slugify('wïth speciäl chærs');\n * // => 'with-special-chars'\n */\n\nconst slugify = (string) => {\n  const a = 'àáäâãåăæçèéëêǵḧìíïîḿńǹñòóöôœṕŕßśșțùúüûǘẃẍÿź·/_,:;';\n  const b = 'aaaaaaaaceeeeghiiiimnnnoooooprssstuuuuuwxyz------';\n  const p = new RegExp(a.split('').join('|'), 'g');\n\n  /* eslint-disable no-useless-escape */\n  // https://gist.github.com/hagemann/382adfc57adbd5af078dc93feef01fe1\n  return string\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, '-') // Replace spaces with -\n    .replace(p, c => b.charAt(a.indexOf(c))) // Replace special characters\n    .replace(/&/g, '-and-') // Replace & with 'and'\n    .replace(/[^\\w\\-]+/g, '') // Remove all non-word characters\n    .replace(/\\-\\-+/g, '-') // Replace multiple - with single -\n    .replace(/^-+/, '') // Trim - from start of text\n    .replace(/-+$/, ''); // Trim - from end of text\n  /* eslint-enable no-useless-escape */\n};\n\n\nexport default expects(\n  slugify,\n  'slugify',\n  {\n    0: 'string'\n  }\n);\n","/**\n * Removes all data stored in the local storage.\n *\n * @module Storage\n * @name storageClear\n * @example\n *\n * storageClear();\n *\n */\nconst storageClear = () => window.localStorage.clear();\n\nexport default storageClear;\n","import LZString from 'lz-string';\nimport expects from '../expects/expects';\n\n\n/**\n * Retrieves data from the local storage.\n *\n * @module Storage\n * @name storageGet\n * @param {String} key key to retrieve\n * @returns {Any} Returns data from the local storage. Returns '' if key is not found\n * @example\n *\n * storageGet('key');\n */\nconst storageGet = (key) => {\n  let value = LZString.decompress(window.localStorage.getItem(key));\n  try {\n    value = JSON.parse(value);\n  } catch (e) {\n    console.error('[storageGet] key was not found in the storage');\n  }\n\n  return value;\n};\n\nexport default expects(\n  storageGet,\n  'storageGet',\n  {\n    0: 'string'\n  }\n);\n","import expects from '../expects/expects';\n\n/**\n * Removes an entry from the local storage.\n *\n * @module Storage\n * @name storageRemove\n * @param {String} key key of the entry to remove\n * @example\n *\n * storageRemove('key');\n */\nconst storageRemove = key => window.localStorage.removeItem(key);\n\nexport default expects(\n  storageRemove,\n  'storageRemove',\n  {\n    0: 'string'\n  }\n);\n","import LZString from 'lz-string';\nimport expects from '../expects/expects';\n\n/**\n * Stores data to the local storage.\n *\n * @module Storage\n * @name storageSet\n * @param {String} key name of the entry\n * @param {*} data data to store in the local storage\n * @example\n *\n * storageSet('key', data);\n */\nconst storageSet = (key, data) => window.localStorage.setItem(key, LZString.compress(JSON.stringify(data)));\n\nexport default expects(\n  storageSet,\n  'storageSet',\n  {\n    0: 'string',\n    1: 'any'\n  }\n);\n","import expects from '../expects/expects';\n\n/**\n * Splits a string to an array based on the delimiter passed.\n *\n * @module Array\n * @name stringToArray\n * @param {String} string string to convert to array\n * @param {String} delimiter where to split the string\n * @returns {StringArray} Returns an array of the split string.\n * @example\n *\n * stringToArray('apple;banana;orange', ';');\n * // => ['apple', 'banana', 'orange']\n */\nconst stringToArray = (string, delimiter) => string.split(delimiter);\n\nexport default expects(\n  stringToArray,\n  'stringToArray',\n  {\n    0: 'string',\n    1: 'string'\n  }\n);\n","import expects from '../expects/expects';\n\nconst predefinedTrueValues = [true, 'true', 'yes', 'y', '1', 1];\n\n/**\n * Converts any value to a Boolean equivalent.\n *\n * **Note:** If no user-defined array is passed, the default true values are: ['true', 'yes', 'y', '1'].\n *\n * @module Boolean\n * @name toBoolean\n * @param {*} val value to check if true or false\n * @param {AnyArray} [trueValuesArr] optional array of user defined true values\n * @returns {Boolean} Returns a boolean equivalent of the value.\n * @example\n *\n * toBoolean('y');\n *  // => true\n *\n * toBoolean(null);\n * // => false\n */\nconst toBoolean = (val = null, trueValuesArr = predefinedTrueValues) => {\n  let valToTest;\n  try {\n    valToTest = val.toString().toLowerCase();\n  } catch (e) {\n    valToTest = val;\n  }\n  return trueValuesArr.includes(valToTest);\n};\n\nexport default expects(\n  toBoolean,\n  'toBoolean',\n  {\n    0: 'any'\n  },\n  {\n    1: 'array'\n  }\n);\n","import expects from '../expects/expects';\n\n/**\n * Converts a string to Sentence case.\n *\n * @module String\n * @name toSentenceCase\n * @param {String} string string to convert to Sentence case\n * @returns {String} Returns a Sentence case string.\n * @example\n *\n * toSentenceCase('THE QUICK BROWN FOX');\n * // => 'The quick brown fox'\n */\nconst toSentenceCase = (string) => {\n  const returnStr = string.toLowerCase();\n  return returnStr.charAt(0).toUpperCase() + returnStr.slice(1);\n};\n\nexport default expects(\n  toSentenceCase,\n  'toSentenceCase',\n  {\n    0: 'string'\n  }\n);\n","import expects from '../expects/expects';\n\n// https://stackoverflow.com/a/196991/4620773\n\n/**\n * Converts a string to a Title Case.\n *\n * @module String\n * @name toTitleCase\n * @param {String} string string to convert to Title Case\n * @returns {String} Returns a Tile Case string.\n * @example\n *\n * toTitleCase('the quick brown fox');\n * // => 'The Quick Brown Fox'\n */\nconst toTitleCase = string => string.toLowerCase().replace(\n  /\\w\\S*/g,\n  txt => txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase()\n);\n\nexport default expects(\n  toTitleCase,\n  'toTitleCase',\n  {\n    0: 'string'\n  }\n);\n"],"sourceRoot":""}